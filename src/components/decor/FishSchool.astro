---
import '@styles/components/decor/FishSchool.scss';
import fishNormal from '@images/svg/fish/FluentEmojiFish.svg';
import fishTropical from '@images/svg/fish/FluentEmojiTropicalFish.svg';

const randNum = (max: number, min: number = 0) => Math.floor(Math.random() * (max - min) + min);

interface Props {
	['class']?: string;
	amount: number;
}

const { class: className, amount } = Astro.props;
---

<div
	class:list={['fish-school', className]}
	data-amount={amount}
	data-aos='swim-away'
	data-aos-offset='0'
	aria-hidden='true'
>
</div>

<script>
	const randNum = (max: number, min: number = 0) => Math.floor(Math.random() * (max - min) + min);

	const fishSchools = document.querySelectorAll<HTMLDivElement>('.fish-school');

	const fishImages = ['src/images/svg/fish/FluentEmojiFish.svg', 'src/images/svg/fish/FluentEmojiTropicalFish.svg'];
	const fishSizeRange = [16, 28];
	const maxOffset = (fishSizeRange[1] - fishSizeRange[0]) / 4;
	fishSchools.forEach((fishSchool) => {
		const amount = parseInt(fishSchool.getAttribute('data-amount') || '8');

		const areaSize = Math.floor(amount * fishSizeRange[1] * 0.55);

		const fishList = [];
		const cellsTaken: number[][] = [];

		for (let i = 0; i < amount; i++) {
			const img = fishImages[randNum(fishImages.length)];
			const size = randNum(fishSizeRange[1], fishSizeRange[0]);
			const animationDelay = randNum(7) / 10;
			const animationDuration = randNum(16, 10) / 10;

			// creates a "grid" of cells and tries to disperse the fish between the cells,
			// with one fish max per cell
			while (true) {
				const x = randNum(amount);
				const y = randNum(amount);

				// if cell is taken, try again
				if (cellsTaken.find((c) => c[0] === x && c[1] === y)) continue;

				cellsTaken.push([x, y]);
				break;
			}

			const cell = cellsTaken.slice(-1).flat();

			// calculate actual position
			const left = cell[0] * (areaSize / amount) + randNum(maxOffset);
			const top = cell[1] * (areaSize / amount) + randNum(maxOffset);

			const fishContainer = document.createElement('div');
			const fishImage = document.createElement('img');

			fishContainer.classList.add('fish');
			fishContainer.style.top = `${top}px`;
			fishContainer.style.left = `${left}px`;
			fishContainer.style.width = `${size}px`;
			fishContainer.style.height = `${size}px`;
			fishContainer.style.animation = `fish-jump ${
				animationDuration * 0.25
			}s ease-in ${animationDelay}s forwards, fish-swim-away ${animationDuration * 0.6}s ease-in ${
				animationDuration * 0.4 + animationDelay
			}s forwards`;

			fishImage.setAttribute('src', img);
			fishImage.setAttribute('alt', '');
			fishImage.style.animationDelay = `${animationDelay}s`;
			fishImage.style.animation = `fish-turn ${animationDuration * 0.4}s ease-in forwards`;

			fishContainer.appendChild(fishImage);

			fishSchool.appendChild(fishContainer);

			fishSchool.style.width = `${areaSize}px`;
			fishSchool.style.height = `${areaSize}px`;

			fishList.push({
				img,
			});
		}
		console.log(fishList);
	});
</script>
