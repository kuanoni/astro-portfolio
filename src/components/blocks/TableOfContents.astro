---
import type { MarkdownHeading } from 'astro';
import '@styles/components/TableOfContents.scss';

interface Props {
	headings: MarkdownHeading[];
}

const { headings } = Astro.props;

const minDepth = Math.min(...headings.map((h) => h.depth));

const listHtml = headings
	.map((cur, i) => {
		// list item string
		let liStr = `<li><a href="#${cur.slug}">${cur.text}</a></li>`;
		const next = headings[i + 1];

		if (!next) return liStr + '</ol>'.repeat(cur.depth - minDepth);

		// cur is the end of the current list
		if (cur.depth < next.depth) liStr += '<ol>'.repeat(next.depth - cur.depth);

		// next is the start of a new list
		if (cur.depth > next.depth) liStr += '</ol>'.repeat(cur.depth - next.depth);

		return liStr;
	})
	.join('');
---

{
	listHtml && headings.length > 1 ? (
		<details class='toc' open>
			<summary>Contents</summary>
			<ol set:html={listHtml} />
		</details>
	) : null
}
