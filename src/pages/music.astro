---
import SoundCloud from 'soundcloud-scraper';
import BaseLayout from 'src/layouts/BaseLayout.astro';
import { SOUNDCLOUD_USERNAME } from 'src/config';
import '@styles/pages/music.scss';

const client = new SoundCloud.Client();

const tracks = await client
	.getUser(SOUNDCLOUD_USERNAME)
	.then(async (user) => {
		return user.tracks;
	})
	.catch((err) => {
		throw new Error(err);
	});

const songs = await Promise.all(
	tracks.map(async (track) => {
		return await client
			.getSongInfo(track.url)
			.then(async (song) => {
				return { id: song.id, title: song.title };
			})
			.catch((err) => {
				throw new Error(err);
			});
	})
);

if (!tracks) throw new Error(`Failed to fetch Soundcloud tracks: ${tracks}`);

if (!songs) throw new Error(`Failed to fetch Soundcloud tracks: ${songs}`);
---

<BaseLayout>
	<main>
		<section class='music'>
			<h1>Music</h1>
			<p>
				Sometimes I make music for fun. You can view the rest of my tracks on
				<a href={`https://soundcloud.com/${SOUNDCLOUD_USERNAME}`}>my soundcloud</a>.
			</p>
			<hr />
			{
				songs.map((song) => {
					return (
						<iframe
							title={`SoundCloud track "${song.title}" by ${SOUNDCLOUD_USERNAME}`}
							scrolling='no'
							src={`https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/${song.id}&color=%23ff5500&auto_play=false&hide_related=true&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true`}
						/>
					);
				})
			}
		</section>
	</main>
</BaseLayout>
